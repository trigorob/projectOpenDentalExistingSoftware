//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OpenDentBusiness.WebServiceMainHQ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceMainHQSoap", Namespace="https://www.opendental.com/OpenDentalWebServiceHQ/")]
    public partial class WebServiceMainHQ : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PerformRefreshCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateWebAppUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateWebAppUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildWebLanderUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildWebSchedRecallURLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildWebSchedNewPatApptURLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildFeaturePortalUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildConfirmationRequestUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildOAuthUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDropboxAuthorizationUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDropboxAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmationRequestSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmationRequestSignAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmationRequestCancelServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsSignAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsCancelServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestListenerProxyPrefsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEConnectorTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEConnectorTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateEServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesForEServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableAdditionalFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFHIRAPIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateFHIRAPIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFHIRAPIKeysForOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFHIRAPIKeysOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceMainHQ() {
            this.Url = global::OpenDentBusiness.Properties.Settings.Default.OpenDentBusiness_WebServiceMainHQ_WebServiceMainHQ;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PerformRefreshCacheCompletedEventHandler PerformRefreshCacheCompleted;
        
        /// <remarks/>
        public event GenerateWebAppUrlCompletedEventHandler GenerateWebAppUrlCompleted;
        
        /// <remarks/>
        public event ValidateWebAppUrlCompletedEventHandler ValidateWebAppUrlCompleted;
        
        /// <remarks/>
        public event BuildWebLanderUrlCompletedEventHandler BuildWebLanderUrlCompleted;
        
        /// <remarks/>
        public event BuildWebSchedRecallURLsCompletedEventHandler BuildWebSchedRecallURLsCompleted;
        
        /// <remarks/>
        public event BuildWebSchedNewPatApptURLsCompletedEventHandler BuildWebSchedNewPatApptURLsCompleted;
        
        /// <remarks/>
        public event BuildFeaturePortalUrlCompletedEventHandler BuildFeaturePortalUrlCompleted;
        
        /// <remarks/>
        public event BuildConfirmationRequestUrlCompletedEventHandler BuildConfirmationRequestUrlCompleted;
        
        /// <remarks/>
        public event BuildOAuthUrlCompletedEventHandler BuildOAuthUrlCompleted;
        
        /// <remarks/>
        public event GetDropboxAuthorizationUrlCompletedEventHandler GetDropboxAuthorizationUrlCompleted;
        
        /// <remarks/>
        public event GetDropboxAccessTokenCompletedEventHandler GetDropboxAccessTokenCompleted;
        
        /// <remarks/>
        public event ValidateVersionCompletedEventHandler ValidateVersionCompleted;
        
        /// <remarks/>
        public event ConfirmationRequestSendCompletedEventHandler ConfirmationRequestSendCompleted;
        
        /// <remarks/>
        public event ConfirmationRequestSignAgreementCompletedEventHandler ConfirmationRequestSignAgreementCompleted;
        
        /// <remarks/>
        public event ConfirmationRequestCancelServiceCompletedEventHandler ConfirmationRequestCancelServiceCompleted;
        
        /// <remarks/>
        public event SmsSendCompletedEventHandler SmsSendCompleted;
        
        /// <remarks/>
        public event SmsSignAgreementCompletedEventHandler SmsSignAgreementCompleted;
        
        /// <remarks/>
        public event SmsCancelServiceCompletedEventHandler SmsCancelServiceCompleted;
        
        /// <remarks/>
        public event RequestListenerProxyPrefsCompletedEventHandler RequestListenerProxyPrefsCompleted;
        
        /// <remarks/>
        public event GetEConnectorTypeCompletedEventHandler GetEConnectorTypeCompleted;
        
        /// <remarks/>
        public event SetEConnectorTypeCompletedEventHandler SetEConnectorTypeCompleted;
        
        /// <remarks/>
        public event ValidateEServiceCompletedEventHandler ValidateEServiceCompleted;
        
        /// <remarks/>
        public event GetFeaturesForCustomerCompletedEventHandler GetFeaturesForCustomerCompleted;
        
        /// <remarks/>
        public event GetFeaturesForEServiceCompletedEventHandler GetFeaturesForEServiceCompleted;
        
        /// <remarks/>
        public event EnableAdditionalFeaturesCompletedEventHandler EnableAdditionalFeaturesCompleted;
        
        /// <remarks/>
        public event CheckFHIRAPIKeyCompletedEventHandler CheckFHIRAPIKeyCompleted;
        
        /// <remarks/>
        public event GenerateFHIRAPIKeyCompletedEventHandler GenerateFHIRAPIKeyCompleted;
        
        /// <remarks/>
        public event GetFHIRAPIKeysForOfficeCompletedEventHandler GetFHIRAPIKeysForOfficeCompleted;
        
        /// <remarks/>
        public event UpdateFHIRAPIKeysCompletedEventHandler UpdateFHIRAPIKeysCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/PerformRefreshCache", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PerformRefreshCache(string officeData) {
            object[] results = this.Invoke("PerformRefreshCache", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PerformRefreshCacheAsync(string officeData) {
            this.PerformRefreshCacheAsync(officeData, null);
        }
        
        /// <remarks/>
        public void PerformRefreshCacheAsync(string officeData, object userState) {
            if ((this.PerformRefreshCacheOperationCompleted == null)) {
                this.PerformRefreshCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformRefreshCacheOperationCompleted);
            }
            this.InvokeAsync("PerformRefreshCache", new object[] {
                        officeData}, this.PerformRefreshCacheOperationCompleted, userState);
        }
        
        private void OnPerformRefreshCacheOperationCompleted(object arg) {
            if ((this.PerformRefreshCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformRefreshCacheCompleted(this, new PerformRefreshCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GenerateWebAppUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateWebAppUrl(string officeData) {
            object[] results = this.Invoke("GenerateWebAppUrl", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateWebAppUrlAsync(string officeData) {
            this.GenerateWebAppUrlAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GenerateWebAppUrlAsync(string officeData, object userState) {
            if ((this.GenerateWebAppUrlOperationCompleted == null)) {
                this.GenerateWebAppUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateWebAppUrlOperationCompleted);
            }
            this.InvokeAsync("GenerateWebAppUrl", new object[] {
                        officeData}, this.GenerateWebAppUrlOperationCompleted, userState);
        }
        
        private void OnGenerateWebAppUrlOperationCompleted(object arg) {
            if ((this.GenerateWebAppUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateWebAppUrlCompleted(this, new GenerateWebAppUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/ValidateWebAppUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateWebAppUrl(string officeData) {
            object[] results = this.Invoke("ValidateWebAppUrl", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateWebAppUrlAsync(string officeData) {
            this.ValidateWebAppUrlAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ValidateWebAppUrlAsync(string officeData, object userState) {
            if ((this.ValidateWebAppUrlOperationCompleted == null)) {
                this.ValidateWebAppUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateWebAppUrlOperationCompleted);
            }
            this.InvokeAsync("ValidateWebAppUrl", new object[] {
                        officeData}, this.ValidateWebAppUrlOperationCompleted, userState);
        }
        
        private void OnValidateWebAppUrlOperationCompleted(object arg) {
            if ((this.ValidateWebAppUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateWebAppUrlCompleted(this, new ValidateWebAppUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/BuildWebLanderUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildWebLanderUrl(string registrationKey, string eService) {
            object[] results = this.Invoke("BuildWebLanderUrl", new object[] {
                        registrationKey,
                        eService});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildWebLanderUrlAsync(string registrationKey, string eService) {
            this.BuildWebLanderUrlAsync(registrationKey, eService, null);
        }
        
        /// <remarks/>
        public void BuildWebLanderUrlAsync(string registrationKey, string eService, object userState) {
            if ((this.BuildWebLanderUrlOperationCompleted == null)) {
                this.BuildWebLanderUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildWebLanderUrlOperationCompleted);
            }
            this.InvokeAsync("BuildWebLanderUrl", new object[] {
                        registrationKey,
                        eService}, this.BuildWebLanderUrlOperationCompleted, userState);
        }
        
        private void OnBuildWebLanderUrlOperationCompleted(object arg) {
            if ((this.BuildWebLanderUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildWebLanderUrlCompleted(this, new BuildWebLanderUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/BuildWebSchedRecallURLs", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildWebSchedRecallURLs(string registrationKey, string recallNums) {
            object[] results = this.Invoke("BuildWebSchedRecallURLs", new object[] {
                        registrationKey,
                        recallNums});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildWebSchedRecallURLsAsync(string registrationKey, string recallNums) {
            this.BuildWebSchedRecallURLsAsync(registrationKey, recallNums, null);
        }
        
        /// <remarks/>
        public void BuildWebSchedRecallURLsAsync(string registrationKey, string recallNums, object userState) {
            if ((this.BuildWebSchedRecallURLsOperationCompleted == null)) {
                this.BuildWebSchedRecallURLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildWebSchedRecallURLsOperationCompleted);
            }
            this.InvokeAsync("BuildWebSchedRecallURLs", new object[] {
                        registrationKey,
                        recallNums}, this.BuildWebSchedRecallURLsOperationCompleted, userState);
        }
        
        private void OnBuildWebSchedRecallURLsOperationCompleted(object arg) {
            if ((this.BuildWebSchedRecallURLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildWebSchedRecallURLsCompleted(this, new BuildWebSchedRecallURLsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/BuildWebSchedNewPatApptURLs", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildWebSchedNewPatApptURLs(string registrationKey, string clinicNums) {
            object[] results = this.Invoke("BuildWebSchedNewPatApptURLs", new object[] {
                        registrationKey,
                        clinicNums});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildWebSchedNewPatApptURLsAsync(string registrationKey, string clinicNums) {
            this.BuildWebSchedNewPatApptURLsAsync(registrationKey, clinicNums, null);
        }
        
        /// <remarks/>
        public void BuildWebSchedNewPatApptURLsAsync(string registrationKey, string clinicNums, object userState) {
            if ((this.BuildWebSchedNewPatApptURLsOperationCompleted == null)) {
                this.BuildWebSchedNewPatApptURLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildWebSchedNewPatApptURLsOperationCompleted);
            }
            this.InvokeAsync("BuildWebSchedNewPatApptURLs", new object[] {
                        registrationKey,
                        clinicNums}, this.BuildWebSchedNewPatApptURLsOperationCompleted, userState);
        }
        
        private void OnBuildWebSchedNewPatApptURLsOperationCompleted(object arg) {
            if ((this.BuildWebSchedNewPatApptURLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildWebSchedNewPatApptURLsCompleted(this, new BuildWebSchedNewPatApptURLsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/BuildFeaturePortalUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildFeaturePortalUrl(string registrationKey, string eService) {
            object[] results = this.Invoke("BuildFeaturePortalUrl", new object[] {
                        registrationKey,
                        eService});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildFeaturePortalUrlAsync(string registrationKey, string eService) {
            this.BuildFeaturePortalUrlAsync(registrationKey, eService, null);
        }
        
        /// <remarks/>
        public void BuildFeaturePortalUrlAsync(string registrationKey, string eService, object userState) {
            if ((this.BuildFeaturePortalUrlOperationCompleted == null)) {
                this.BuildFeaturePortalUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildFeaturePortalUrlOperationCompleted);
            }
            this.InvokeAsync("BuildFeaturePortalUrl", new object[] {
                        registrationKey,
                        eService}, this.BuildFeaturePortalUrlOperationCompleted, userState);
        }
        
        private void OnBuildFeaturePortalUrlOperationCompleted(object arg) {
            if ((this.BuildFeaturePortalUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildFeaturePortalUrlCompleted(this, new BuildFeaturePortalUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/BuildConfirmationRequestUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildConfirmationRequestUrl(string shortGuid) {
            object[] results = this.Invoke("BuildConfirmationRequestUrl", new object[] {
                        shortGuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildConfirmationRequestUrlAsync(string shortGuid) {
            this.BuildConfirmationRequestUrlAsync(shortGuid, null);
        }
        
        /// <remarks/>
        public void BuildConfirmationRequestUrlAsync(string shortGuid, object userState) {
            if ((this.BuildConfirmationRequestUrlOperationCompleted == null)) {
                this.BuildConfirmationRequestUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildConfirmationRequestUrlOperationCompleted);
            }
            this.InvokeAsync("BuildConfirmationRequestUrl", new object[] {
                        shortGuid}, this.BuildConfirmationRequestUrlOperationCompleted, userState);
        }
        
        private void OnBuildConfirmationRequestUrlOperationCompleted(object arg) {
            if ((this.BuildConfirmationRequestUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildConfirmationRequestUrlCompleted(this, new BuildConfirmationRequestUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/BuildOAuthUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildOAuthUrl(string registrationKey, string appName) {
            object[] results = this.Invoke("BuildOAuthUrl", new object[] {
                        registrationKey,
                        appName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildOAuthUrlAsync(string registrationKey, string appName) {
            this.BuildOAuthUrlAsync(registrationKey, appName, null);
        }
        
        /// <remarks/>
        public void BuildOAuthUrlAsync(string registrationKey, string appName, object userState) {
            if ((this.BuildOAuthUrlOperationCompleted == null)) {
                this.BuildOAuthUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildOAuthUrlOperationCompleted);
            }
            this.InvokeAsync("BuildOAuthUrl", new object[] {
                        registrationKey,
                        appName}, this.BuildOAuthUrlOperationCompleted, userState);
        }
        
        private void OnBuildOAuthUrlOperationCompleted(object arg) {
            if ((this.BuildOAuthUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildOAuthUrlCompleted(this, new BuildOAuthUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GetDropboxAuthorizationUrl", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDropboxAuthorizationUrl(long registrationKeyNum) {
            object[] results = this.Invoke("GetDropboxAuthorizationUrl", new object[] {
                        registrationKeyNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDropboxAuthorizationUrlAsync(long registrationKeyNum) {
            this.GetDropboxAuthorizationUrlAsync(registrationKeyNum, null);
        }
        
        /// <remarks/>
        public void GetDropboxAuthorizationUrlAsync(long registrationKeyNum, object userState) {
            if ((this.GetDropboxAuthorizationUrlOperationCompleted == null)) {
                this.GetDropboxAuthorizationUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDropboxAuthorizationUrlOperationCompleted);
            }
            this.InvokeAsync("GetDropboxAuthorizationUrl", new object[] {
                        registrationKeyNum}, this.GetDropboxAuthorizationUrlOperationCompleted, userState);
        }
        
        private void OnGetDropboxAuthorizationUrlOperationCompleted(object arg) {
            if ((this.GetDropboxAuthorizationUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDropboxAuthorizationUrlCompleted(this, new GetDropboxAuthorizationUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GetDropboxAccessToken", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDropboxAccessToken(string code) {
            object[] results = this.Invoke("GetDropboxAccessToken", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDropboxAccessTokenAsync(string code) {
            this.GetDropboxAccessTokenAsync(code, null);
        }
        
        /// <remarks/>
        public void GetDropboxAccessTokenAsync(string code, object userState) {
            if ((this.GetDropboxAccessTokenOperationCompleted == null)) {
                this.GetDropboxAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDropboxAccessTokenOperationCompleted);
            }
            this.InvokeAsync("GetDropboxAccessToken", new object[] {
                        code}, this.GetDropboxAccessTokenOperationCompleted, userState);
        }
        
        private void OnGetDropboxAccessTokenOperationCompleted(object arg) {
            if ((this.GetDropboxAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDropboxAccessTokenCompleted(this, new GetDropboxAccessTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/ValidateVersion", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateVersion(string officeData) {
            object[] results = this.Invoke("ValidateVersion", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateVersionAsync(string officeData) {
            this.ValidateVersionAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ValidateVersionAsync(string officeData, object userState) {
            if ((this.ValidateVersionOperationCompleted == null)) {
                this.ValidateVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateVersionOperationCompleted);
            }
            this.InvokeAsync("ValidateVersion", new object[] {
                        officeData}, this.ValidateVersionOperationCompleted, userState);
        }
        
        private void OnValidateVersionOperationCompleted(object arg) {
            if ((this.ValidateVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateVersionCompleted(this, new ValidateVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/ConfirmationRequestSend", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmationRequestSend(string officeData) {
            object[] results = this.Invoke("ConfirmationRequestSend", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmationRequestSendAsync(string officeData) {
            this.ConfirmationRequestSendAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ConfirmationRequestSendAsync(string officeData, object userState) {
            if ((this.ConfirmationRequestSendOperationCompleted == null)) {
                this.ConfirmationRequestSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmationRequestSendOperationCompleted);
            }
            this.InvokeAsync("ConfirmationRequestSend", new object[] {
                        officeData}, this.ConfirmationRequestSendOperationCompleted, userState);
        }
        
        private void OnConfirmationRequestSendOperationCompleted(object arg) {
            if ((this.ConfirmationRequestSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmationRequestSendCompleted(this, new ConfirmationRequestSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/ConfirmationRequestSignAgreemen" +
            "t", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmationRequestSignAgreement(string officeData) {
            object[] results = this.Invoke("ConfirmationRequestSignAgreement", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmationRequestSignAgreementAsync(string officeData) {
            this.ConfirmationRequestSignAgreementAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ConfirmationRequestSignAgreementAsync(string officeData, object userState) {
            if ((this.ConfirmationRequestSignAgreementOperationCompleted == null)) {
                this.ConfirmationRequestSignAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmationRequestSignAgreementOperationCompleted);
            }
            this.InvokeAsync("ConfirmationRequestSignAgreement", new object[] {
                        officeData}, this.ConfirmationRequestSignAgreementOperationCompleted, userState);
        }
        
        private void OnConfirmationRequestSignAgreementOperationCompleted(object arg) {
            if ((this.ConfirmationRequestSignAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmationRequestSignAgreementCompleted(this, new ConfirmationRequestSignAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/ConfirmationRequestCancelServic" +
            "e", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmationRequestCancelService(string officeData) {
            object[] results = this.Invoke("ConfirmationRequestCancelService", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmationRequestCancelServiceAsync(string officeData) {
            this.ConfirmationRequestCancelServiceAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ConfirmationRequestCancelServiceAsync(string officeData, object userState) {
            if ((this.ConfirmationRequestCancelServiceOperationCompleted == null)) {
                this.ConfirmationRequestCancelServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmationRequestCancelServiceOperationCompleted);
            }
            this.InvokeAsync("ConfirmationRequestCancelService", new object[] {
                        officeData}, this.ConfirmationRequestCancelServiceOperationCompleted, userState);
        }
        
        private void OnConfirmationRequestCancelServiceOperationCompleted(object arg) {
            if ((this.ConfirmationRequestCancelServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmationRequestCancelServiceCompleted(this, new ConfirmationRequestCancelServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/SmsSend", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsSend(string officeData) {
            object[] results = this.Invoke("SmsSend", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsSendAsync(string officeData) {
            this.SmsSendAsync(officeData, null);
        }
        
        /// <remarks/>
        public void SmsSendAsync(string officeData, object userState) {
            if ((this.SmsSendOperationCompleted == null)) {
                this.SmsSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsSendOperationCompleted);
            }
            this.InvokeAsync("SmsSend", new object[] {
                        officeData}, this.SmsSendOperationCompleted, userState);
        }
        
        private void OnSmsSendOperationCompleted(object arg) {
            if ((this.SmsSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsSendCompleted(this, new SmsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/SmsSignAgreement", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsSignAgreement(string officeData) {
            object[] results = this.Invoke("SmsSignAgreement", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsSignAgreementAsync(string officeData) {
            this.SmsSignAgreementAsync(officeData, null);
        }
        
        /// <remarks/>
        public void SmsSignAgreementAsync(string officeData, object userState) {
            if ((this.SmsSignAgreementOperationCompleted == null)) {
                this.SmsSignAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsSignAgreementOperationCompleted);
            }
            this.InvokeAsync("SmsSignAgreement", new object[] {
                        officeData}, this.SmsSignAgreementOperationCompleted, userState);
        }
        
        private void OnSmsSignAgreementOperationCompleted(object arg) {
            if ((this.SmsSignAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsSignAgreementCompleted(this, new SmsSignAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/SmsCancelService", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsCancelService(string officeData) {
            object[] results = this.Invoke("SmsCancelService", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsCancelServiceAsync(string officeData) {
            this.SmsCancelServiceAsync(officeData, null);
        }
        
        /// <remarks/>
        public void SmsCancelServiceAsync(string officeData, object userState) {
            if ((this.SmsCancelServiceOperationCompleted == null)) {
                this.SmsCancelServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsCancelServiceOperationCompleted);
            }
            this.InvokeAsync("SmsCancelService", new object[] {
                        officeData}, this.SmsCancelServiceOperationCompleted, userState);
        }
        
        private void OnSmsCancelServiceOperationCompleted(object arg) {
            if ((this.SmsCancelServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsCancelServiceCompleted(this, new SmsCancelServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/RequestListenerProxyPrefs", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestListenerProxyPrefs(string officeData) {
            object[] results = this.Invoke("RequestListenerProxyPrefs", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestListenerProxyPrefsAsync(string officeData) {
            this.RequestListenerProxyPrefsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestListenerProxyPrefsAsync(string officeData, object userState) {
            if ((this.RequestListenerProxyPrefsOperationCompleted == null)) {
                this.RequestListenerProxyPrefsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestListenerProxyPrefsOperationCompleted);
            }
            this.InvokeAsync("RequestListenerProxyPrefs", new object[] {
                        officeData}, this.RequestListenerProxyPrefsOperationCompleted, userState);
        }
        
        private void OnRequestListenerProxyPrefsOperationCompleted(object arg) {
            if ((this.RequestListenerProxyPrefsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestListenerProxyPrefsCompleted(this, new RequestListenerProxyPrefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GetEConnectorType", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEConnectorType(string officeData) {
            object[] results = this.Invoke("GetEConnectorType", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEConnectorTypeAsync(string officeData) {
            this.GetEConnectorTypeAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetEConnectorTypeAsync(string officeData, object userState) {
            if ((this.GetEConnectorTypeOperationCompleted == null)) {
                this.GetEConnectorTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEConnectorTypeOperationCompleted);
            }
            this.InvokeAsync("GetEConnectorType", new object[] {
                        officeData}, this.GetEConnectorTypeOperationCompleted, userState);
        }
        
        private void OnGetEConnectorTypeOperationCompleted(object arg) {
            if ((this.GetEConnectorTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEConnectorTypeCompleted(this, new GetEConnectorTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/SetEConnectorType", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetEConnectorType(string officeData, bool isListening) {
            object[] results = this.Invoke("SetEConnectorType", new object[] {
                        officeData,
                        isListening});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetEConnectorTypeAsync(string officeData, bool isListening) {
            this.SetEConnectorTypeAsync(officeData, isListening, null);
        }
        
        /// <remarks/>
        public void SetEConnectorTypeAsync(string officeData, bool isListening, object userState) {
            if ((this.SetEConnectorTypeOperationCompleted == null)) {
                this.SetEConnectorTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEConnectorTypeOperationCompleted);
            }
            this.InvokeAsync("SetEConnectorType", new object[] {
                        officeData,
                        isListening}, this.SetEConnectorTypeOperationCompleted, userState);
        }
        
        private void OnSetEConnectorTypeOperationCompleted(object arg) {
            if ((this.SetEConnectorTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEConnectorTypeCompleted(this, new SetEConnectorTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/ValidateEService", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateEService(string registrationKey, string eService) {
            object[] results = this.Invoke("ValidateEService", new object[] {
                        registrationKey,
                        eService});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateEServiceAsync(string registrationKey, string eService) {
            this.ValidateEServiceAsync(registrationKey, eService, null);
        }
        
        /// <remarks/>
        public void ValidateEServiceAsync(string registrationKey, string eService, object userState) {
            if ((this.ValidateEServiceOperationCompleted == null)) {
                this.ValidateEServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateEServiceOperationCompleted);
            }
            this.InvokeAsync("ValidateEService", new object[] {
                        registrationKey,
                        eService}, this.ValidateEServiceOperationCompleted, userState);
        }
        
        private void OnValidateEServiceOperationCompleted(object arg) {
            if ((this.ValidateEServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateEServiceCompleted(this, new ValidateEServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GetFeaturesForCustomer", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFeaturesForCustomer(string registrationKey) {
            object[] results = this.Invoke("GetFeaturesForCustomer", new object[] {
                        registrationKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesForCustomerAsync(string registrationKey) {
            this.GetFeaturesForCustomerAsync(registrationKey, null);
        }
        
        /// <remarks/>
        public void GetFeaturesForCustomerAsync(string registrationKey, object userState) {
            if ((this.GetFeaturesForCustomerOperationCompleted == null)) {
                this.GetFeaturesForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesForCustomerOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesForCustomer", new object[] {
                        registrationKey}, this.GetFeaturesForCustomerOperationCompleted, userState);
        }
        
        private void OnGetFeaturesForCustomerOperationCompleted(object arg) {
            if ((this.GetFeaturesForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesForCustomerCompleted(this, new GetFeaturesForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GetFeaturesForEService", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFeaturesForEService(string registrationKey, string eService) {
            object[] results = this.Invoke("GetFeaturesForEService", new object[] {
                        registrationKey,
                        eService});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesForEServiceAsync(string registrationKey, string eService) {
            this.GetFeaturesForEServiceAsync(registrationKey, eService, null);
        }
        
        /// <remarks/>
        public void GetFeaturesForEServiceAsync(string registrationKey, string eService, object userState) {
            if ((this.GetFeaturesForEServiceOperationCompleted == null)) {
                this.GetFeaturesForEServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesForEServiceOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesForEService", new object[] {
                        registrationKey,
                        eService}, this.GetFeaturesForEServiceOperationCompleted, userState);
        }
        
        private void OnGetFeaturesForEServiceOperationCompleted(object arg) {
            if ((this.GetFeaturesForEServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesForEServiceCompleted(this, new GetFeaturesForEServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/EnableAdditionalFeatures", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EnableAdditionalFeatures(string officeData) {
            object[] results = this.Invoke("EnableAdditionalFeatures", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnableAdditionalFeaturesAsync(string officeData) {
            this.EnableAdditionalFeaturesAsync(officeData, null);
        }
        
        /// <remarks/>
        public void EnableAdditionalFeaturesAsync(string officeData, object userState) {
            if ((this.EnableAdditionalFeaturesOperationCompleted == null)) {
                this.EnableAdditionalFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableAdditionalFeaturesOperationCompleted);
            }
            this.InvokeAsync("EnableAdditionalFeatures", new object[] {
                        officeData}, this.EnableAdditionalFeaturesOperationCompleted, userState);
        }
        
        private void OnEnableAdditionalFeaturesOperationCompleted(object arg) {
            if ((this.EnableAdditionalFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableAdditionalFeaturesCompleted(this, new EnableAdditionalFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/CheckFHIRAPIKey", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckFHIRAPIKey(string officeData) {
            object[] results = this.Invoke("CheckFHIRAPIKey", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFHIRAPIKeyAsync(string officeData) {
            this.CheckFHIRAPIKeyAsync(officeData, null);
        }
        
        /// <remarks/>
        public void CheckFHIRAPIKeyAsync(string officeData, object userState) {
            if ((this.CheckFHIRAPIKeyOperationCompleted == null)) {
                this.CheckFHIRAPIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFHIRAPIKeyOperationCompleted);
            }
            this.InvokeAsync("CheckFHIRAPIKey", new object[] {
                        officeData}, this.CheckFHIRAPIKeyOperationCompleted, userState);
        }
        
        private void OnCheckFHIRAPIKeyOperationCompleted(object arg) {
            if ((this.CheckFHIRAPIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFHIRAPIKeyCompleted(this, new CheckFHIRAPIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GenerateFHIRAPIKey", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateFHIRAPIKey(string officeData) {
            object[] results = this.Invoke("GenerateFHIRAPIKey", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateFHIRAPIKeyAsync(string officeData) {
            this.GenerateFHIRAPIKeyAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GenerateFHIRAPIKeyAsync(string officeData, object userState) {
            if ((this.GenerateFHIRAPIKeyOperationCompleted == null)) {
                this.GenerateFHIRAPIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateFHIRAPIKeyOperationCompleted);
            }
            this.InvokeAsync("GenerateFHIRAPIKey", new object[] {
                        officeData}, this.GenerateFHIRAPIKeyOperationCompleted, userState);
        }
        
        private void OnGenerateFHIRAPIKeyOperationCompleted(object arg) {
            if ((this.GenerateFHIRAPIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateFHIRAPIKeyCompleted(this, new GenerateFHIRAPIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/GetFHIRAPIKeysForOffice", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFHIRAPIKeysForOffice(string officeData) {
            object[] results = this.Invoke("GetFHIRAPIKeysForOffice", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFHIRAPIKeysForOfficeAsync(string officeData) {
            this.GetFHIRAPIKeysForOfficeAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetFHIRAPIKeysForOfficeAsync(string officeData, object userState) {
            if ((this.GetFHIRAPIKeysForOfficeOperationCompleted == null)) {
                this.GetFHIRAPIKeysForOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFHIRAPIKeysForOfficeOperationCompleted);
            }
            this.InvokeAsync("GetFHIRAPIKeysForOffice", new object[] {
                        officeData}, this.GetFHIRAPIKeysForOfficeOperationCompleted, userState);
        }
        
        private void OnGetFHIRAPIKeysForOfficeOperationCompleted(object arg) {
            if ((this.GetFHIRAPIKeysForOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFHIRAPIKeysForOfficeCompleted(this, new GetFHIRAPIKeysForOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.opendental.com/OpenDentalWebServiceHQ/UpdateFHIRAPIKeys", RequestNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", ResponseNamespace="https://www.opendental.com/OpenDentalWebServiceHQ/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFHIRAPIKeys(string officeData) {
            object[] results = this.Invoke("UpdateFHIRAPIKeys", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFHIRAPIKeysAsync(string officeData) {
            this.UpdateFHIRAPIKeysAsync(officeData, null);
        }
        
        /// <remarks/>
        public void UpdateFHIRAPIKeysAsync(string officeData, object userState) {
            if ((this.UpdateFHIRAPIKeysOperationCompleted == null)) {
                this.UpdateFHIRAPIKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFHIRAPIKeysOperationCompleted);
            }
            this.InvokeAsync("UpdateFHIRAPIKeys", new object[] {
                        officeData}, this.UpdateFHIRAPIKeysOperationCompleted, userState);
        }
        
        private void OnUpdateFHIRAPIKeysOperationCompleted(object arg) {
            if ((this.UpdateFHIRAPIKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFHIRAPIKeysCompleted(this, new UpdateFHIRAPIKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PerformRefreshCacheCompletedEventHandler(object sender, PerformRefreshCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PerformRefreshCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PerformRefreshCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GenerateWebAppUrlCompletedEventHandler(object sender, GenerateWebAppUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateWebAppUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateWebAppUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ValidateWebAppUrlCompletedEventHandler(object sender, ValidateWebAppUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateWebAppUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateWebAppUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BuildWebLanderUrlCompletedEventHandler(object sender, BuildWebLanderUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildWebLanderUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildWebLanderUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BuildWebSchedRecallURLsCompletedEventHandler(object sender, BuildWebSchedRecallURLsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildWebSchedRecallURLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildWebSchedRecallURLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BuildWebSchedNewPatApptURLsCompletedEventHandler(object sender, BuildWebSchedNewPatApptURLsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildWebSchedNewPatApptURLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildWebSchedNewPatApptURLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BuildFeaturePortalUrlCompletedEventHandler(object sender, BuildFeaturePortalUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildFeaturePortalUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildFeaturePortalUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BuildConfirmationRequestUrlCompletedEventHandler(object sender, BuildConfirmationRequestUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildConfirmationRequestUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildConfirmationRequestUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BuildOAuthUrlCompletedEventHandler(object sender, BuildOAuthUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildOAuthUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildOAuthUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDropboxAuthorizationUrlCompletedEventHandler(object sender, GetDropboxAuthorizationUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDropboxAuthorizationUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDropboxAuthorizationUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDropboxAccessTokenCompletedEventHandler(object sender, GetDropboxAccessTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDropboxAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDropboxAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ValidateVersionCompletedEventHandler(object sender, ValidateVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ConfirmationRequestSendCompletedEventHandler(object sender, ConfirmationRequestSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmationRequestSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmationRequestSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ConfirmationRequestSignAgreementCompletedEventHandler(object sender, ConfirmationRequestSignAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmationRequestSignAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmationRequestSignAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ConfirmationRequestCancelServiceCompletedEventHandler(object sender, ConfirmationRequestCancelServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmationRequestCancelServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmationRequestCancelServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SmsSendCompletedEventHandler(object sender, SmsSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SmsSignAgreementCompletedEventHandler(object sender, SmsSignAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsSignAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsSignAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SmsCancelServiceCompletedEventHandler(object sender, SmsCancelServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsCancelServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsCancelServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RequestListenerProxyPrefsCompletedEventHandler(object sender, RequestListenerProxyPrefsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestListenerProxyPrefsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestListenerProxyPrefsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEConnectorTypeCompletedEventHandler(object sender, GetEConnectorTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEConnectorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEConnectorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetEConnectorTypeCompletedEventHandler(object sender, SetEConnectorTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEConnectorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEConnectorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ValidateEServiceCompletedEventHandler(object sender, ValidateEServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateEServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateEServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFeaturesForCustomerCompletedEventHandler(object sender, GetFeaturesForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFeaturesForEServiceCompletedEventHandler(object sender, GetFeaturesForEServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesForEServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesForEServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void EnableAdditionalFeaturesCompletedEventHandler(object sender, EnableAdditionalFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableAdditionalFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableAdditionalFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckFHIRAPIKeyCompletedEventHandler(object sender, CheckFHIRAPIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFHIRAPIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFHIRAPIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GenerateFHIRAPIKeyCompletedEventHandler(object sender, GenerateFHIRAPIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateFHIRAPIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateFHIRAPIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFHIRAPIKeysForOfficeCompletedEventHandler(object sender, GetFHIRAPIKeysForOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFHIRAPIKeysForOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFHIRAPIKeysForOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateFHIRAPIKeysCompletedEventHandler(object sender, UpdateFHIRAPIKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFHIRAPIKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFHIRAPIKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591